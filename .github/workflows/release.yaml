name: CMake build

on:
  push:
    branches: ["ci"]
  pull_request:
    branches: ["ci"]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      # Set fail-fast to false to ensure that feedback is delivered for all matrix combinations. Consider changing this to true when your workflow is stable.
      fail-fast: false
      matrix:
        os: [windows-latest]
        build_type: [Release]
        c_compiler: [gcc, clang, cl]
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
        exclude:
          - os: windows-latest
            c_compiler: gcc
          - os: windows-latest
            c_compiler: clang

    steps:
      - uses: actions/checkout@v3

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          dir: "${{ github.workspace}}/"
          cache: true

      - name: Install .NET Framework 3.5
        run: |
          Enable-WindowsOptionalFeature -Online -FeatureName "NetFx3"
        # To build Cpython

      - name: Set up cmake deps cache
        uses: actions/cache@v3
        with:
          path: ./_deps
          key: ${{ runner.os }}.deps.${{ hashFiles('**/') }}
          restore-keys: ${{ runner.os }}.deps.

      - name: Create a solution file(.sln) with cmake
        run: cmake ./CMakeLists.txt -A Win32 # Need IA-32(32bit) mode for `hkxcmd`

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.1
      - name: Build by solution file
        run: msbuild.exe NemesisUnlimitedBehaviorEngine.sln -t:Rebuild -p:Configuration=Release
        continue-on-error: true # Add because cache is wasted while build fails

      - name: List files
        shell: pwsh
        run: tree /f > ./Release/tree.txt

      - name: Compress build files
        shell: pwsh
        run: Compress-Archive ./Release ./build.zip

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.3
        with:
          path: |
            ${{ github.workspace}}/build.zip
