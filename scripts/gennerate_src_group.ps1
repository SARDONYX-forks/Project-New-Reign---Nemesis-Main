function Get-FilesRecursively {
  param (
    [string]$directory,
    [string]$filter
  )

  Get-ChildItem -Path $directory -Recurse -File | ForEach-Object { $_.FullName -replace '\\', '/' -replace $filter, "" }
}

function New-FileList {
  param (
    [string]$baseDirectory,
    [string]$outputFile
  )

  $includeDir = Join-Path $baseDirectory "include"
  $srcDir = Join-Path $baseDirectory "src"

  # Generate header file list
  $headerFiles = Get-FilesRecursively $includeDir "^.*(?=include/)"

  $headerContent = "set(Header_Files"
  foreach ($file in $headerFiles) {
    $headerContent += "`n    `"$file`""
  }
  $headerContent += ")"
  $headerContent += "`nsource_group(`"Header Files`" FILES `$(Header_Files))`n"

  # Generate source file list
  $sourceFiles = Get-FilesRecursively $srcDir "^.*(?=src/)"

  $sourceContent = "set(Source_Files"
  foreach ($file in $sourceFiles) {
    $sourceContent += "`n    `"$file`""
  }
  $sourceContent += ")"
  $sourceContent += "`nsource_group(`"Source Files`" FILES `$(Source_Files))"

  # Write content to the output file(NOTE: Add NoNewline to prevent trailing newlines from being converted to CRLF.)
  "# This file is generated by script.`n$headerContent$sourceContent`n" | Out-File -FilePath $outputFile -Encoding utf8 -NoNewline
}

# INFO: Can be run from any directory by referencing the project root directory from anywhere.
$NemesisRoot = Get-Location | ForEach-Object { $_.Path -replace "(?<=Cmake).*", "" }
New-FileList -baseDirectory $NemesisRoot -outputFile "$NemesisRoot/CMake/SrcGroup.cmake"
